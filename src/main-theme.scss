@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


// /// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms
// /// of the Material Design hues.
// /// @param {Map} $base-palette Map of hue keys to color values for the basis for this palette.
// /// @param {String | Number} $default Default hue for this palette.
// /// @param {String | Number} $lighter "lighter" hue for this palette.
// /// @param {String | Number} $darker "darker" hue for this palette.
// /// @param {String | Number} $text "text" hue for this palette.
// /// @returns {Map} A complete Angular Material theming palette.
// @function define-palette($base-palette, $default: 500, $lighter: 100, $darker: 700,
//   $text: $default) {
//   $result: map.merge($base-palette, (
//     default: _get-color-from-palette($base-palette, $default),
//     lighter: _get-color-from-palette($base-palette, $lighter),
//     darker: _get-color-from-palette($base-palette, $darker),
//     text: _get-color-from-palette($base-palette, $text),
//     default-contrast: get-contrast-color-from-palette($base-palette, $default),
//     lighter-contrast: get-contrast-color-from-palette($base-palette, $lighter),
//     darker-contrast: get-contrast-color-from-palette($base-palette, $darker)
//   ));

//   // For each hue in the palette, add a "-contrast" color to the map.
//   @each $hue, $color in $base-palette {
//     $result: map.merge($result, (
//       '#{$hue}-contrast': get-contrast-color-from-palette($base-palette, $hue)
//     ));
//   }

//   @return $result;
// }

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ans-primary: mat.define-palette(mat.$amber-palette);
$ans-accent:  mat.define-palette(mat.$orange-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ans-warn:    mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$ans-theme: mat.define-light-theme((
  color: (
    primary: $ans-primary,
    accent: $ans-accent,
    warn: $ans-warn
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($ans-theme);

.mat-stroked-button.mat-primary {
  border-color: #ffc107 !important;
}

.mat-stroked-button {
  border-color: white !important;
  color: white;
}
